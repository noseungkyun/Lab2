https://wikidocs.net/33737


MASTER[CM까지 여기다가 설치할거임]

-- 패키지의 실제 업데이트 작업을 수행
$ sudo yum update -y
$ sudo yum install -y wget

[ALL NODE]
java -version
rpm -qa | grep jdk  >>> jdk로만 설치되어있는것
yum remove java*
rpm -qa | grep jdk


JDK 설치 (YUM 1.8) -> 설치후 /usr/local/ 으로 옮긴 후 /etc/profile 유트브 보면서 설정(1강) -> source /etc/profile
https://blog.hanumoka.net/2018/04/30/centOs-20180430-centos-install-jdk/
export JAVA_HOME=/usr/local/java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64
export PATH=$PATH:$JAVA_HOME/bin
export JAVA_OPTS="-Dfile.encoding=UTF-8"
export CLASSPATH="."

[ALL NODE]
gedit /etc/hosts
127.0.0.1 localhost
192.168.10.1 master
192.168.10.2 slave1
192.168.10.3 slave2
192.168.10.4 slave3

[ALL NODE]
gedit /etc/hostname
master >> elephant namenode
slave1 >> secondary namenode
slave2 >> balancer resourcemanager
slave3 >> lion database

[ALL NODE]
/bin/hostname -F /etc/hostname 

[ALL NODE]
>> 새터미널 열기

[Matser]
yum install openssh*
/usr/sbin/sshd      >  서비스 실행
ssh-keygen -t rsa -P "" > 키 생성
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys > 인증된 키 추가



chmod 600 ~/.ssh/authorized_keys > 퍼미션 

scp -rp ~/.ssh/authorized_keys root@slave3:~/.ssh/authorized_keys

각 노드에서 ssh host명 으로 모든 노드 접속되는지 확인 

여기까지 elephant등 접속한다 생각하면되는듯

방화벽 막혀 있을때 proxy 설정 추가
sudo vi /etc/yum.conf
proxy=http://server:port/



SELinux 해제 후 

	
$ sudo vi /etc/sysconfig/selinux
SELINUX=enforcing 을 SELINUX=disabled 로 변경
reboot

-----------------------------------------------------------------------------

[ALL NODE]
1. Check vm.swappiness on 
o Set the value to 1 if necessary
vm.swappiness = 0   스왑 사용안함
vm.swappiness = 1   스왑 사용 최소화
vm.swappiness = 60  기본값
vm.swappiness = 100 적극적으로 스왑 사용
→ 메모리 여유가 충분할 때 성능향상을 위해 vm.swappiness = 10 정도를 권고하는 경우가 있음

$ cat /proc/sys/vm/swappiness
30

$ sudo sysctl -w vm.swappiness=1
vm.swappiness = 1

$ cat /proc/sys/vm/swappiness
1



-----------------------------------------------------------------------------
2. Show the mount attributes of your volume(s)
cat /proc/mounts



-----------------------------------------------------------------------------
3. If you have ext-based volumes, list the reserve space setting
파일시스템 정보를 저장하고 있으며, 리눅스 부팅시 마운트정보를 저장하고 있다.
이 파일안에 있는 구성값들로 인해 부팅시에 자동으로 적용될 수 있도록 한다.

o XFS volumes do not support reserve space ???
$ cat /etc/fstab



-----------------------------------------------------------------------------
4. Disable transparent hugepage support
[??? NODE 일단 MASTER[CM까지 여기다가 설치할거임]에]
THP는 대용량 사이즈의 페이지를 응용프로그램이 필요로 할 때, 관리자의 특정한 설정 없이 가장 활성화 되어 있는 프로세서로 부터 대용량 사이즈의 페이지를 보다 쉽게 접근하도록 허용하기 위한 기능이다.
대부분의 경우 THP 기능을 사용하면 성능 향상을 기대할 수 있으나, 상황(특정 프로그램)에 따라서는 THP로 인해 System Hang > 메모리 부족으로 시스템 다운 이 유발되는 경우가 있다. (DB의 경우는 더 많이 유발)

https://fkkmemi.github.io/docs/centos7-vm-setup/
Centos 요것만 하면될듯!
$ sudo gedit /etc/init.d/disable-transparent-hugepages
$ sudo chmod 755 /etc/init.d/disable-transparent-hugepages
$ sudo chkconfig --add disable-transparent-hugepages

$ cat /sys/kernel/mm/transparent_hugepage/enabled
always madvise [never]
$ cat /sys/kernel/mm/transparent_hugepage/defrag
always madvise [never]



RHEL 7 버전에서의 THP 비활성화 방법 XXXXXXX
http://allthatlinux.com/dokuwiki/doku.php?id=thp_transparent_huge_pages_%EA%B8%B0%EB%8A%A5%EA%B3%BC_%EC%84%A4%EC%A0%95_%EB%B0%A9%EB%B2%95
$ sudo mkdir /etc/tuned/thp_disable

$ sudo vi /etc/tuned/thp_disable/tuned.conf

새로 만든 프로필을 활성화합니다.
$ sudo tuned-adm profile thp_disable


-----------------------------------------------------------------------------
5. List your network interface configuration
ifconfig -a


-----------------------------------------------------------------------------
6. Show that forward and reverse host lookups are correctly resolved
o For /etc/hosts, use getent
o For DNS, use nslookup


gedit /etc/hosts
127.0.0.1 localhost
192.168.10.1 master
192.168.10.2 slave1
192.168.10.3 slave2
192.168.10.4 slave3



gedit /etc/hostname
master >> elephant namenode
slave1 >> secondary namenode
slave2 >> balancer resourcemanager
slave3 >> lion database


$ sudo vi /etc/hosts
$ cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
# AWS servers
172.31.2.32     cm1
172.31.3.52     m1
172.31.12.190   w1
172.31.7.57     w2
172.31.1.53     w3

리눅스는 보통 IPv6가 활성화되어 있음(기본값) -> 비활성화 왜? -> 안해도 될듯


$ sudo hostnamectl set-hostname m1
$ sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
$ sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1

$ echo net.ipv6.conf.all.disable_ipv6 = 1 | sudo tee -a /etc/sysctl.conf
$ echo net.ipv6.conf.default.disable_ipv6 = 1 | sudo tee -a /etc/sysctl.conf
$ cat /etc/sysctl.conf | grep net.ipv6
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1

[root@slave3 ~]# getent hosts slave1
192.168.10.2    slave1
[root@slave3 ~]# getent hosts 192.168.10.1
192.168.10.1    master

-----------------------------------------------------------------------------
7. Show the nscd service is running
nscd 설치는 필수는 아님. 다만 도메인 룩업을 많이 할 경우 nscd 에서 캐싱을 해 주기 때문에 name server 의 부하를 줄여 줄 수 있다.

$ sudo systemctl status nscd
Unit nscd.service could not be found.
$ sudo yum install -y nscd
$ sudo systemctl start nscd
$ sudo systemctl status nscd
$ sudo systemctl enable nscd

-----------------------------------------------------------------------------
8. Show the ntpd service is running
ntpd는 ntp 서버를 참조해 시스템 클록을 보정하면서 클라이언트에 시간을 제공하는 데몬

$ sudo systemctl status ntp
Unit ntp.service could not be found.
$ sudo yum install -y ntp
$ sudo systemctl start ntpd
$ sudo systemctl status ntpd
$ sudo systemctl disable chronyd
Removed symlink /etc/systemd/system/multi-user.target.wants/chronyd.service.
$ sudo systemctl enable ntpd
$ ntpq -p






Cloudera Manager Install Lab 
Path B install using CM 5.15.x 
The full rundown is here. You will have to modify your package repo to get the right release. The default repo download always points to the latest version. 
Use the documentation to complete the following objectives: 

[CM]
$ sudo wget https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/cloudera-manager.repo -P /etc/yum.repos.d/
$ sudo sed -i 's/x86_64\/cm\/5/x86_64\/cm\/5.15.2/g' /etc/yum.repos.d/cloudera-manager.repo
$ sudo rpm --import https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/RPM-GPG-KEY-cloudera

[CM]
• Install a supported Oracle JDK on your first node 

sudo yum install -y oracle-j2sdk1.7

[ALL NODE]
• Install a supported JDBC connector on all nodes 

$ sudo wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.tar.gz ~/
$ tar xvfz ~/mysql-connector-java-5.1.46.tar.gz
$ sudo mkdir -p /usr/share/java
$ sudo cp ~/mysql-connector-java-5.1.46/mysql-connector-java-5.1.46-bin.jar /usr/share/java/mysql-connector-java.jar

다른 노드에도 똑같이 복사해준다!!
내 방법


$ scp /usr/share/java/mysql-connector-java.jar m1:~/
$ scp /usr/share/java/mysql-connector-java.jar w1:~/
$ scp /usr/share/java/mysql-connector-java.jar w2:~/
$ scp /usr/share/java/mysql-connector-java.jar w3:~/
$ ssh m1 "sudo mkdir -p /usr/share/java; sudo mv ~/mysql-connector-java.jar /usr/share/java/"
$ ssh w1 "sudo mkdir -p /usr/share/java; sudo mv ~/mysql-connector-java.jar /usr/share/java/"
$ ssh w2 "sudo mkdir -p /usr/share/java; sudo mv ~/mysql-connector-java.jar /usr/share/java/"
$ ssh w3 "sudo mkdir -p /usr/share/java; sudo mv ~/mysql-connector-java.jar /usr/share/java/"


내 방법

scp -rp /usr/share/java/mysql-connector-java.jar root@slave1:/usr/share/java/
scp -rp /usr/share/java/mysql-connector-java.jar root@slave2:/usr/share/java/
scp -rp /usr/share/java/mysql-connector-java.jar root@slave3:/usr/share/java/

[CM ???]
• Create the databases and access grants you will need 
(1)Install MariaDB
$ sudo yum install -y mariadb-server

(2) Enable and run MariaDB
$ sudo systemctl enable mariadb
Created symlink from /etc/systemd/system/multi-user.target.wants/mariadb.service to /usr/lib/systemd/system/mariadb.service.
$ sudo systemctl start mariadb

(3) Run /usr/bin/mysql_secure_installation for security
$ sudo /usr/bin/mysql_secure_installation -> 전부 Y

(4) Create Databases and users for Cloudera manager and eco systems
[??????????????]
$ mysql -u root -p
CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; GRANT ALL ON scm.* TO 'scm'@'%' IDENTIFIED BY 'training';
CREATE DATABASE amon DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; GRANT ALL ON amon.* TO 'amon'@'%' IDENTIFIED BY 'training';
CREATE DATABASE rmon DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; GRANT ALL ON rmon.* TO 'rmon'@'%' IDENTIFIED BY 'training';
CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; GRANT ALL ON hue.* TO 'hue'@'%' IDENTIFIED BY 'training';
CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; GRANT ALL ON metastore.* TO 'metastore'@'%' IDENTIFIED BY 'training';
CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci; GRANT ALL ON oozie.* TO 'oozie'@'%' IDENTIFIED BY 'training';
FLUSH PRIVILEGES;
EXIT;

[CM ???]
• Configure Cloudera Manager to connect to the database 
(1)Install cloudera-manager-daemons cloudera-manager-server

>>>>>>>>  설치오류시 cd /etc/yum.repos.d/
cloudera-manager baseurl 마지막 숫자 5.9.....  을 5.9.0으로


->https://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5.9.0/

$ sudo yum install -y cloudera-manager-daemons cloudera-manager-server

(2)Run initialize script for SCM
----------------------$ sudo /usr/share/cmf/schema/scm_prepare_database.sh mysql scm scm training
mysql -u root -p


CREATE DATABASE cmserver DEFAULT CHARACTER SET utf8;

GRANT ALL on cmserver.* TO 'cmserveruser'@'%' IDENTIFIED BY 'password';

 

CREATE DATABASE metastore DEFAULT CHARACTER SET utf8;

GRANT ALL on metastore.* TO 'hiveuser'@'%' IDENTIFIED BY 'password';

 

CREATE DATABASE amon DEFAULT CHARACTER SET utf8;

GRANT ALL on amon.* TO 'amonuser'@'%' IDENTIFIED BY 'password';

 

CREATE DATABASE rman DEFAULT CHARACTER SET utf8;

GRANT ALL on rman.* TO 'rmanuser'@'%' IDENTIFIED BY 'password';

 

CREATE DATABASE oozie DEFAULT CHARACTER SET utf8;

GRANT ALL on oozie.* TO 'oozieuser'@'%' IDENTIFIED BY 'password';

 

CREATE DATABASE hue DEFAULT CHARACTER SET utf8;

GRANT ALL on hue.* TO 'hueuser'@'%' IDENTIFIED BY 'password';





mysql cmserver cmserveruser pasword



(3)Start your Cloudera Manager server -- debug as necessary
http://master:7180/

$ sudo systemctl start cloudera-scm-server
$ sudo tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log

• Start your Cloudera Manager server -- debug as necessary 
master:7180

• Do not continue until you can browse your CM instance at port 7180 





























  # dhclient

    를 입력해준다.

    다음은 iptables 를 설치할 차례이다. 순서대로 명령어를 입력하자.
systemctl status firewalld
    # systemctl disable firewalld
    # systemctl mask firewalld

    # yum install iptables-services
    # systemctl enable iptables
    # systemctl start iptables
    # service iptables save

    위에 두개를 했을 때, 나타나는 오류나 경고는 무시한다.

    # vi /etc/sysconfig/iptables

    를 입력하여, 정상적으로 뜨는지 확인한다.



